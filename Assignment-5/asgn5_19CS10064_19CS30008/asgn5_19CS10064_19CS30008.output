Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 X: %empty

    4 F: %empty

    5 W: %empty

    6 D: %empty

    7 change_table: %empty

    8 primary_expression: IDENTIFIER
    9                   | constant
   10                   | STRING_LITERAL
   11                   | PARENTHESIS_OPEN expression PARENTHESIS_CLOSE

   12 constant: INTEGER_CONSTANT
   13         | FLOATING_CONSTANT
   14         | CHAR_CONSTANT

   15 postfix_expression: primary_expression
   16                   | postfix_expression SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE
   17                   | postfix_expression PARENTHESIS_OPEN argument_expression_list_opt PARENTHESIS_CLOSE
   18                   | postfix_expression DOT IDENTIFIER
   19                   | postfix_expression ARROW IDENTIFIER
   20                   | postfix_expression INCREMENT
   21                   | postfix_expression DECREMENT
   22                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

   24 argument_expression_list_opt: argument_expression_list
   25                             | %empty

   26 argument_expression_list: assignment_expression
   27                         | argument_expression_list COMMA assignment_expression

   28 unary_expression: postfix_expression
   29                 | INCREMENT unary_expression
   30                 | DECREMENT unary_expression
   31                 | unary_operator cast_expression
   32                 | SIZEOF unary_expression
   33                 | SIZEOF PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE

   34 unary_operator: BITWISE_AND
   35               | MULTIPLY
   36               | ADD
   37               | SUBTRACT
   38               | BITWISE_NOR
   39               | NOT

   40 cast_expression: unary_expression
   41                | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE cast_expression

   42 multiplicative_expression: cast_expression
   43                          | multiplicative_expression MULTIPLY cast_expression
   44                          | multiplicative_expression DIVIDE cast_expression
   45                          | multiplicative_expression MODULO cast_expression

   46 additive_expression: multiplicative_expression
   47                    | additive_expression ADD multiplicative_expression
   48                    | additive_expression SUBTRACT multiplicative_expression

   49 shift_expression: additive_expression
   50                 | shift_expression LSHIFT additive_expression
   51                 | shift_expression RSHIFT additive_expression

   52 relational_expression: shift_expression
   53                      | relational_expression LESS_THAN shift_expression
   54                      | relational_expression GREATER_THAN shift_expression
   55                      | relational_expression LESS_THAN_EQUAL shift_expression
   56                      | relational_expression GREATER_THAN_EQUAL shift_expression

   57 equality_expression: relational_expression
   58                    | equality_expression EQUAL relational_expression
   59                    | equality_expression NOT_EQUAL relational_expression

   60 and_expression: equality_expression
   61               | and_expression BITWISE_AND equality_expression

   62 exclusive_or_expression: and_expression
   63                        | exclusive_or_expression BITWISE_XOR and_expression

   64 inclusive_or_expression: exclusive_or_expression
   65                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   66 logical_and_expression: inclusive_or_expression
   67                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   68 logical_or_expression: logical_and_expression
   69                      | logical_or_expression LOGICAL_OR M logical_and_expression

   70 conditional_expression: logical_or_expression
   71                       | logical_or_expression N QUESTION_MARK M expression N COLON M conditional_expression

   72 assignment_expression: conditional_expression
   73                      | unary_expression assignment_operator assignment_expression

   74 assignment_operator: ASSIGN
   75                    | MULTIPLY_ASSIGN
   76                    | DIVIDE_ASSIGN
   77                    | MODULO_ASSIGN
   78                    | ADD_ASSIGN
   79                    | SUBTRACT_ASSIGN
   80                    | LSHIFT_ASSIGN
   81                    | RSHIFT_ASSIGN
   82                    | AND_ASSIGN
   83                    | XOR_ASSIGN
   84                    | OR_ASSIGN

   85 expression: assignment_expression
   86           | expression COMMA assignment_expression

   87 constant_expression: conditional_expression

   88 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   89 init_declarator_list_opt: init_declarator_list
   90                         | %empty

   91 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   92                       | type_specifier declaration_specifiers_opt
   93                       | type_qualifier declaration_specifiers_opt
   94                       | function_specifier declaration_specifiers_opt

   95 declaration_specifiers_opt: declaration_specifiers
   96                           | %empty

   97 init_declarator_list: init_declarator
   98                     | init_declarator_list COMMA init_declarator

   99 init_declarator: declarator
  100                | declarator ASSIGN initializer

  101 storage_class_specifier: EXTERN
  102                        | STATIC
  103                        | AUTO
  104                        | REGISTER

  105 type_specifier: VOID
  106               | CHAR
  107               | SHORT
  108               | INT
  109               | LONG
  110               | FLOAT
  111               | DOUBLE
  112               | SIGNED
  113               | UNSIGNED
  114               | BOOL
  115               | COMPLEX
  116               | IMAGINARY
  117               | enum_specifier

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  119                         | type_qualifier specifier_qualifier_list_opt

  120 specifier_qualifier_list_opt: specifier_qualifier_list
  121                             | %empty

  122 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  123               | ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE
  124               | ENUM IDENTIFIER

  125 identifier_opt: IDENTIFIER
  126               | %empty

  127 enumerator_list: enumerator
  128                | enumerator_list COMMA enumerator

  129 enumerator: IDENTIFIER
  130           | IDENTIFIER ASSIGN constant_expression

  131 type_qualifier: CONST
  132               | RESTRICT
  133               | VOLATILE

  134 function_specifier: INLINE

  135 declarator: pointer direct_declarator
  136           | direct_declarator

  137 direct_declarator: IDENTIFIER
  138                  | PARENTHESIS_OPEN declarator PARENTHESIS_CLOSE
  139                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  140                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list SQUARE_BRACE_CLOSE
  141                  | direct_declarator SQUARE_BRACE_OPEN assignment_expression SQUARE_BRACE_CLOSE
  142                  | direct_declarator SQUARE_BRACE_OPEN SQUARE_BRACE_CLOSE
  143                  | direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  144                  | direct_declarator SQUARE_BRACE_OPEN STATIC assignment_expression SQUARE_BRACE_CLOSE
  145                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  146                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list MULTIPLY SQUARE_BRACE_CLOSE
  147                  | direct_declarator SQUARE_BRACE_OPEN MULTIPLY SQUARE_BRACE_CLOSE
  148                  | direct_declarator PARENTHESIS_OPEN change_table parameter_type_list PARENTHESIS_CLOSE
  149                  | direct_declarator PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE
  150                  | direct_declarator PARENTHESIS_OPEN change_table PARENTHESIS_CLOSE

  151 type_qualifier_list_opt: type_qualifier_list
  152                        | %empty

  153 pointer: MULTIPLY type_qualifier_list_opt
  154        | MULTIPLY type_qualifier_list_opt pointer

  155 type_qualifier_list: type_qualifier
  156                    | type_qualifier_list type_qualifier

  157 parameter_type_list: parameter_list
  158                    | parameter_list COMMA ELLIPSIS

  159 parameter_list: parameter_declaration
  160               | parameter_list COMMA parameter_declaration

  161 parameter_declaration: declaration_specifiers declarator
  162                      | declaration_specifiers

  163 identifier_list: IDENTIFIER
  164                | identifier_list COMMA IDENTIFIER

  165 type_name: specifier_qualifier_list

  166 initializer: assignment_expression
  167            | CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
  168            | CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

  169 initializer_list: designation_opt initializer
  170                 | initializer_list COMMA designation_opt initializer

  171 designation_opt: designation
  172                | %empty

  173 designation: designator_list ASSIGN

  174 designator_list: designator
  175                | designator_list designator

  176 designator: SQUARE_BRACE_OPEN constant_expression SQUARE_BRACE_CLOSE
  177           | DOT IDENTIFIER

  178 statement: labeled_statement
  179          | compound_statement
  180          | expression_statement
  181          | selection_statement
  182          | iteration_statement
  183          | jump_statement

  184 loop_statement: labeled_statement
  185               | expression_statement
  186               | selection_statement
  187               | iteration_statement
  188               | jump_statement

  189 labeled_statement: IDENTIFIER COLON statement
  190                  | CASE constant_expression COLON statement
  191                  | DEFAULT COLON statement

  192 compound_statement: CURLY_BRACE_OPEN X change_table block_item_list_opt CURLY_BRACE_CLOSE

  193 block_item_list_opt: block_item_list
  194                    | %empty

  195 block_item_list: block_item
  196                | block_item_list M block_item

  197 block_item: declaration
  198           | statement

  199 expression_statement: expression SEMICOLON
  200                     | SEMICOLON

  201 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N
  202                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement
  203                    | SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE
  206                    | DO D M loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON
  207                    | DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON
  208                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

  212 jump_statement: GOTO IDENTIFIER SEMICOLON
  213               | CONTINUE SEMICOLON
  214               | BREAK SEMICOLON
  215               | RETURN expression SEMICOLON
  216               | RETURN SEMICOLON

  217 translation_unit: external_declaration
  218                 | translation_unit external_declaration

  219 external_declaration: function_definition
  220                     | declaration

  221 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

  222 declaration_list_opt: declaration_list
  223                     | %empty

  224 declaration_list: declaration
  225                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 103
    BREAK (259) 214
    CASE (260) 190
    CHAR (261) 106
    CONST (262) 131
    CONTINUE (263) 213
    DEFAULT (264) 191
    DO (265) 206 207
    DOUBLE (266) 111
    ELSE (267) 202
    ENUM (268) 122 123 124
    EXTERN (269) 101
    FLOAT (270) 110
    FOR (271) 208 209 210 211
    GOTO (272) 212
    IF (273) 201 202
    INLINE (274) 134
    INT (275) 108
    LONG (276) 109
    REGISTER (277) 104
    RESTRICT (278) 132
    RETURN (279) 215 216
    SHORT (280) 107
    SIGNED (281) 112
    SIZEOF (282) 32 33
    STATIC (283) 102 143 144 145
    STRUCT (284)
    SWITCH (285) 203
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 113
    VOID (289) 105
    VOLATILE (290) 133
    WHILE (291) 204 205 206 207
    BOOL (292) 114
    COMPLEX (293) 115
    IMAGINARY (294) 116
    SQUARE_BRACE_OPEN (295) 16 139 140 141 142 143 144 145 146 147 176
    SQUARE_BRACE_CLOSE (296) 16 139 140 141 142 143 144 145 146 147 176
    PARENTHESIS_OPEN (297) 11 17 22 23 33 41 138 148 149 150 201 202 203 204 205 206 207 208 209 210 211
    PARENTHESIS_CLOSE (298) 11 17 22 23 33 41 138 148 149 150 201 202 203 204 205 206 207 208 209 210 211
    CURLY_BRACE_OPEN (299) 22 23 122 123 167 168 192 205 207 210 211 221
    CURLY_BRACE_CLOSE (300) 22 23 122 123 167 168 192 205 207 210 211 221
    DOT (301) 18 177
    ARROW (302) 19
    INCREMENT (303) 20 29
    DECREMENT (304) 21 30
    BITWISE_AND (305) 34 61
    MULTIPLY (306) 35 43 146 147 153 154
    ADD (307) 36 47
    SUBTRACT (308) 37 48
    BITWISE_NOR (309) 38
    NOT (310) 39
    DIVIDE (311) 44
    MODULO (312) 45
    LSHIFT (313) 50
    RSHIFT (314) 51
    LESS_THAN (315) 53
    GREATER_THAN (316) 54
    LESS_THAN_EQUAL (317) 55
    GREATER_THAN_EQUAL (318) 56
    EQUAL (319) 58
    NOT_EQUAL (320) 59
    BITWISE_XOR (321) 63
    BITWISE_OR (322) 65
    LOGICAL_AND (323) 67
    LOGICAL_OR (324) 69
    QUESTION_MARK (325) 71
    COLON (326) 71 189 190 191
    SEMICOLON (327) 88 199 200 206 207 212 213 214 215 216
    ELLIPSIS (328) 158
    ASSIGN (329) 74 100 130 173
    MULTIPLY_ASSIGN (330) 75
    DIVIDE_ASSIGN (331) 76
    MODULO_ASSIGN (332) 77
    ADD_ASSIGN (333) 78
    SUBTRACT_ASSIGN (334) 79
    LSHIFT_ASSIGN (335) 80
    RSHIFT_ASSIGN (336) 81
    AND_ASSIGN (337) 82
    XOR_ASSIGN (338) 83
    OR_ASSIGN (339) 84
    COMMA (340) 23 27 86 98 123 128 158 160 164 168 170
    HASH (341)
    IDENTIFIER <symp> (342) 8 18 19 124 125 129 130 137 163 164 177 189 212
    INTEGER_CONSTANT <intval> (343) 12
    FLOATING_CONSTANT <charval> (344) 13
    CHAR_CONSTANT <charval> (345) 14
    STRING_LITERAL <charval> (346) 10
    THEN (347)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <instr> (94)
        on left: 1
        on right: 67 69 71 196 201 202 204 205 206 207 208 209 210 211
    N <stmt> (95)
        on left: 2
        on right: 71 201 202 208 209 210 211
    X (96)
        on left: 3
        on right: 192 204 205 208 209 210 211
    F (97)
        on left: 4
        on right: 208 209 210 211
    W (98)
        on left: 5
        on right: 204 205
    D (99)
        on left: 6
        on right: 206 207
    change_table (100)
        on left: 7
        on right: 148 150 192 204 205 208 209 210 211 221
    primary_expression <expr> (101)
        on left: 8 9 10 11
        on right: 15
    constant <symp> (102)
        on left: 12 13 14
        on right: 9
    postfix_expression <arr> (103)
        on left: 15 16 17 18 19 20 21 22 23
        on right: 16 17 18 19 20 21 28
    argument_expression_list_opt <numParams> (104)
        on left: 24 25
        on right: 17
    argument_expression_list <numParams> (105)
        on left: 26 27
        on right: 24 27
    unary_expression <arr> (106)
        on left: 28 29 30 31 32 33
        on right: 29 30 32 40 73
    unary_operator <unaryOp> (107)
        on left: 34 35 36 37 38 39
        on right: 31
    cast_expression <arr> (108)
        on left: 40 41
        on right: 31 41 42 43 44 45
    multiplicative_expression <expr> (109)
        on left: 42 43 44 45
        on right: 43 44 45 46 47 48
    additive_expression <expr> (110)
        on left: 46 47 48
        on right: 47 48 49 50 51
    shift_expression <expr> (111)
        on left: 49 50 51
        on right: 50 51 52 53 54 55 56
    relational_expression <expr> (112)
        on left: 52 53 54 55 56
        on right: 53 54 55 56 57 58 59
    equality_expression <expr> (113)
        on left: 57 58 59
        on right: 58 59 60 61
    and_expression <expr> (114)
        on left: 60 61
        on right: 61 62 63
    exclusive_or_expression <expr> (115)
        on left: 62 63
        on right: 63 64 65
    inclusive_or_expression <expr> (116)
        on left: 64 65
        on right: 65 66 67
    logical_and_expression <expr> (117)
        on left: 66 67
        on right: 67 68 69
    logical_or_expression <expr> (118)
        on left: 68 69
        on right: 69 70 71
    conditional_expression <expr> (119)
        on left: 70 71
        on right: 71 72 87
    assignment_expression <expr> (120)
        on left: 72 73
        on right: 26 27 73 85 86 139 141 143 144 145 166
    assignment_operator (121)
        on left: 74 75 76 77 78 79 80 81 82 83 84
        on right: 73
    expression <expr> (122)
        on left: 85 86
        on right: 11 16 71 86 199 201 202 203 204 205 206 207 208 209 210 211 215
    constant_expression (123)
        on left: 87
        on right: 130 176 190
    declaration (124)
        on left: 88
        on right: 197 208 210 220 224 225
    init_declarator_list_opt (125)
        on left: 89 90
        on right: 88
    declaration_specifiers (126)
        on left: 91 92 93 94
        on right: 88 95 161 162 221
    declaration_specifiers_opt (127)
        on left: 95 96
        on right: 91 92 93 94
    init_declarator_list (128)
        on left: 97 98
        on right: 89 98
    init_declarator <symp> (129)
        on left: 99 100
        on right: 97 98
    storage_class_specifier (130)
        on left: 101 102 103 104
        on right: 91
    type_specifier (131)
        on left: 105 106 107 108 109 110 111 112 113 114 115 116 117
        on right: 92 118
    specifier_qualifier_list (132)
        on left: 118 119
        on right: 120 165
    specifier_qualifier_list_opt (133)
        on left: 120 121
        on right: 118 119
    enum_specifier (134)
        on left: 122 123 124
        on right: 117
    identifier_opt (135)
        on left: 125 126
        on right: 122 123
    enumerator_list (136)
        on left: 127 128
        on right: 122 123 128
    enumerator (137)
        on left: 129 130
        on right: 127 128
    type_qualifier (138)
        on left: 131 132 133
        on right: 93 119 155 156
    function_specifier (139)
        on left: 134
        on right: 94
    declarator <symp> (140)
        on left: 135 136
        on right: 99 100 138 161 221
    direct_declarator <symp> (141)
        on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150
        on right: 135 136 139 140 141 142 143 144 145 146 147 148 149 150
    type_qualifier_list_opt (142)
        on left: 151 152
        on right: 153 154
    pointer <symType> (143)
        on left: 153 154
        on right: 135 154
    type_qualifier_list (144)
        on left: 155 156
        on right: 139 140 143 145 146 151 156
    parameter_type_list (145)
        on left: 157 158
        on right: 148
    parameter_list (146)
        on left: 159 160
        on right: 157 158 160
    parameter_declaration (147)
        on left: 161 162
        on right: 159 160
    identifier_list (148)
        on left: 163 164
        on right: 149 164
    type_name (149)
        on left: 165
        on right: 22 23 33 41
    initializer <symp> (150)
        on left: 166 167 168
        on right: 100 169 170
    initializer_list (151)
        on left: 169 170
        on right: 22 23 167 168 170
    designation_opt (152)
        on left: 171 172
        on right: 169 170
    designation (153)
        on left: 173
        on right: 171
    designator_list (154)
        on left: 174 175
        on right: 173 175
    designator (155)
        on left: 176 177
        on right: 174 175
    statement <stmt> (156)
        on left: 178 179 180 181 182 183
        on right: 189 190 191 198 201 202 203
    loop_statement <stmt> (157)
        on left: 184 185 186 187 188
        on right: 204 206 208 209
    labeled_statement <stmt> (158)
        on left: 189 190 191
        on right: 178 184
    compound_statement <stmt> (159)
        on left: 192
        on right: 179
    block_item_list_opt <stmt> (160)
        on left: 193 194
        on right: 192 205 207 210 211 221
    block_item_list <stmt> (161)
        on left: 195 196
        on right: 193 196
    block_item <stmt> (162)
        on left: 197 198
        on right: 195 196
    expression_statement <expr> (163)
        on left: 199 200
        on right: 180 185 208 209 210 211
    selection_statement <stmt> (164)
        on left: 201 202 203
        on right: 181 186
    iteration_statement <stmt> (165)
        on left: 204 205 206 207 208 209 210 211
        on right: 182 187
    jump_statement <stmt> (166)
        on left: 212 213 214 215 216
        on right: 183 188
    translation_unit (167)
        on left: 217 218
        on right: 0 218
    external_declaration (168)
        on left: 219 220
        on right: 217 218
    function_definition (169)
        on left: 221
        on right: 219
    declaration_list_opt (170)
        on left: 222 223
        on right: 221
    declaration_list (171)
        on left: 224 225
        on right: 222 225


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  103 storage_class_specifier: AUTO .

    $default  reduce using rule 103 (storage_class_specifier)


State 2

  106 type_specifier: CHAR .

    $default  reduce using rule 106 (type_specifier)


State 3

  131 type_qualifier: CONST .

    $default  reduce using rule 131 (type_qualifier)


State 4

  111 type_specifier: DOUBLE .

    $default  reduce using rule 111 (type_specifier)


State 5

  122 enum_specifier: ENUM . identifier_opt CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  123               | ENUM . identifier_opt CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE
  124               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 126 (identifier_opt)

    identifier_opt  go to state 33


State 6

  101 storage_class_specifier: EXTERN .

    $default  reduce using rule 101 (storage_class_specifier)


State 7

  110 type_specifier: FLOAT .

    $default  reduce using rule 110 (type_specifier)


State 8

  134 function_specifier: INLINE .

    $default  reduce using rule 134 (function_specifier)


State 9

  108 type_specifier: INT .

    $default  reduce using rule 108 (type_specifier)


State 10

  109 type_specifier: LONG .

    $default  reduce using rule 109 (type_specifier)


State 11

  104 storage_class_specifier: REGISTER .

    $default  reduce using rule 104 (storage_class_specifier)


State 12

  132 type_qualifier: RESTRICT .

    $default  reduce using rule 132 (type_qualifier)


State 13

  107 type_specifier: SHORT .

    $default  reduce using rule 107 (type_specifier)


State 14

  112 type_specifier: SIGNED .

    $default  reduce using rule 112 (type_specifier)


State 15

  102 storage_class_specifier: STATIC .

    $default  reduce using rule 102 (storage_class_specifier)


State 16

  113 type_specifier: UNSIGNED .

    $default  reduce using rule 113 (type_specifier)


State 17

  105 type_specifier: VOID .

    $default  reduce using rule 105 (type_specifier)


State 18

  133 type_qualifier: VOLATILE .

    $default  reduce using rule 133 (type_qualifier)


State 19

  114 type_specifier: BOOL .

    $default  reduce using rule 114 (type_specifier)


State 20

  115 type_specifier: COMPLEX .

    $default  reduce using rule 115 (type_specifier)


State 21

  116 type_specifier: IMAGINARY .

    $default  reduce using rule 116 (type_specifier)


State 22

  220 external_declaration: declaration .

    $default  reduce using rule 220 (external_declaration)


State 23

   88 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON
  221 function_definition: declaration_specifiers . declarator declaration_list_opt change_table CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_OPEN  shift, and go to state 34
    MULTIPLY          shift, and go to state 35
    IDENTIFIER        shift, and go to state 36

    $default  reduce using rule 90 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 37
    init_declarator_list      go to state 38
    init_declarator           go to state 39
    declarator                go to state 40
    direct_declarator         go to state 41
    pointer                   go to state 42


State 24

   91 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 96 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   92 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 96 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  117 type_specifier: enum_specifier .

    $default  reduce using rule 117 (type_specifier)


State 27

   93 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 96 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 46
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   94 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 96 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    declaration_specifiers_opt  go to state 47
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  218 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 48
    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 49
    function_definition      go to state 31


State 30

  217 translation_unit: external_declaration .

    $default  reduce using rule 217 (translation_unit)


State 31

  219 external_declaration: function_definition .

    $default  reduce using rule 219 (external_declaration)


State 32

  124 enum_specifier: ENUM IDENTIFIER .
  125 identifier_opt: IDENTIFIER .

    CURLY_BRACE_OPEN  reduce using rule 125 (identifier_opt)
    $default          reduce using rule 124 (enum_specifier)


State 33

  122 enum_specifier: ENUM identifier_opt . CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  123               | ENUM identifier_opt . CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN  shift, and go to state 50


State 34

  138 direct_declarator: PARENTHESIS_OPEN . declarator PARENTHESIS_CLOSE

    PARENTHESIS_OPEN  shift, and go to state 34
    MULTIPLY          shift, and go to state 35
    IDENTIFIER        shift, and go to state 36

    declarator         go to state 51
    direct_declarator  go to state 41
    pointer            go to state 42


State 35

  153 pointer: MULTIPLY . type_qualifier_list_opt
  154        | MULTIPLY . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 152 (type_qualifier_list_opt)

    type_qualifier           go to state 52
    type_qualifier_list_opt  go to state 53
    type_qualifier_list      go to state 54


State 36

  137 direct_declarator: IDENTIFIER .

    $default  reduce using rule 137 (direct_declarator)


State 37

   88 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 38

   89 init_declarator_list_opt: init_declarator_list .
   98 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 56

    $default  reduce using rule 89 (init_declarator_list_opt)


State 39

   97 init_declarator_list: init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 40

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer
  221 function_definition: declaration_specifiers declarator . declaration_list_opt change_table CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ASSIGN     shift, and go to state 57

    CURLY_BRACE_OPEN  reduce using rule 223 (declaration_list_opt)
    $default          reduce using rule 99 (init_declarator)

    declaration              go to state 58
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 60
    declaration_list         go to state 61


State 41

  136 declarator: direct_declarator .
  139 direct_declarator: direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  140                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list SQUARE_BRACE_CLOSE
  141                  | direct_declarator . SQUARE_BRACE_OPEN assignment_expression SQUARE_BRACE_CLOSE
  142                  | direct_declarator . SQUARE_BRACE_OPEN SQUARE_BRACE_CLOSE
  143                  | direct_declarator . SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  144                  | direct_declarator . SQUARE_BRACE_OPEN STATIC assignment_expression SQUARE_BRACE_CLOSE
  145                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  146                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list MULTIPLY SQUARE_BRACE_CLOSE
  147                  | direct_declarator . SQUARE_BRACE_OPEN MULTIPLY SQUARE_BRACE_CLOSE
  148                  | direct_declarator . PARENTHESIS_OPEN change_table parameter_type_list PARENTHESIS_CLOSE
  149                  | direct_declarator . PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE
  150                  | direct_declarator . PARENTHESIS_OPEN change_table PARENTHESIS_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 62
    PARENTHESIS_OPEN   shift, and go to state 63

    $default  reduce using rule 136 (declarator)


State 42

  135 declarator: pointer . direct_declarator

    PARENTHESIS_OPEN  shift, and go to state 34
    IDENTIFIER        shift, and go to state 36

    direct_declarator  go to state 64


State 43

   95 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 95 (declaration_specifiers_opt)


State 44

   91 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 91 (declaration_specifiers)


State 45

   92 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 92 (declaration_specifiers)


State 46

   93 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 93 (declaration_specifiers)


State 47

   94 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 94 (declaration_specifiers)


State 48

    0 $accept: translation_unit $end .

    $default  accept


State 49

  218 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 218 (translation_unit)


State 50

  122 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN . enumerator_list CURLY_BRACE_CLOSE
  123               | ENUM identifier_opt CURLY_BRACE_OPEN . enumerator_list COMMA CURLY_BRACE_CLOSE

    IDENTIFIER  shift, and go to state 65

    enumerator_list  go to state 66
    enumerator       go to state 67


State 51

  138 direct_declarator: PARENTHESIS_OPEN declarator . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 68


State 52

  155 type_qualifier_list: type_qualifier .

    $default  reduce using rule 155 (type_qualifier_list)


State 53

  153 pointer: MULTIPLY type_qualifier_list_opt .
  154        | MULTIPLY type_qualifier_list_opt . pointer

    MULTIPLY  shift, and go to state 35

    $default  reduce using rule 153 (pointer)

    pointer  go to state 69


State 54

  151 type_qualifier_list_opt: type_qualifier_list .
  156 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 151 (type_qualifier_list_opt)

    type_qualifier  go to state 70


State 55

   88 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 88 (declaration)


State 56

   98 init_declarator_list: init_declarator_list COMMA . init_declarator

    PARENTHESIS_OPEN  shift, and go to state 34
    MULTIPLY          shift, and go to state 35
    IDENTIFIER        shift, and go to state 36

    init_declarator    go to state 71
    declarator         go to state 72
    direct_declarator  go to state 41
    pointer            go to state 42


State 57

  100 init_declarator: declarator ASSIGN . initializer

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 75
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 106
    initializer                go to state 107


State 58

  224 declaration_list: declaration .

    $default  reduce using rule 224 (declaration_list)


State 59

   88 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    PARENTHESIS_OPEN  shift, and go to state 34
    MULTIPLY          shift, and go to state 35
    IDENTIFIER        shift, and go to state 36

    $default  reduce using rule 90 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 37
    init_declarator_list      go to state 38
    init_declarator           go to state 39
    declarator                go to state 72
    direct_declarator         go to state 41
    pointer                   go to state 42


State 60

  221 function_definition: declaration_specifiers declarator declaration_list_opt . change_table CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 7 (change_table)

    change_table  go to state 108


State 61

  222 declaration_list_opt: declaration_list .
  225 declaration_list: declaration_list . declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 222 (declaration_list_opt)

    declaration              go to state 109
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 62

  139 direct_declarator: direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  140                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list SQUARE_BRACE_CLOSE
  141                  | direct_declarator SQUARE_BRACE_OPEN . assignment_expression SQUARE_BRACE_CLOSE
  142                  | direct_declarator SQUARE_BRACE_OPEN . SQUARE_BRACE_CLOSE
  143                  | direct_declarator SQUARE_BRACE_OPEN . STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  144                  | direct_declarator SQUARE_BRACE_OPEN . STATIC assignment_expression SQUARE_BRACE_CLOSE
  145                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  146                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list MULTIPLY SQUARE_BRACE_CLOSE
  147                  | direct_declarator SQUARE_BRACE_OPEN . MULTIPLY SQUARE_BRACE_CLOSE

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 12
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 110
    VOLATILE            shift, and go to state 18
    SQUARE_BRACE_CLOSE  shift, and go to state 111
    PARENTHESIS_OPEN    shift, and go to state 74
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISE_AND         shift, and go to state 78
    MULTIPLY            shift, and go to state 112
    ADD                 shift, and go to state 80
    SUBTRACT            shift, and go to state 81
    BITWISE_NOR         shift, and go to state 82
    NOT                 shift, and go to state 83
    IDENTIFIER          shift, and go to state 84
    INTEGER_CONSTANT    shift, and go to state 85
    FLOATING_CONSTANT   shift, and go to state 86
    CHAR_CONSTANT       shift, and go to state 87
    STRING_LITERAL      shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 113
    type_qualifier             go to state 52
    type_qualifier_list        go to state 114


State 63

  148 direct_declarator: direct_declarator PARENTHESIS_OPEN . change_table parameter_type_list PARENTHESIS_CLOSE
  149                  | direct_declarator PARENTHESIS_OPEN . identifier_list PARENTHESIS_CLOSE
  150                  | direct_declarator PARENTHESIS_OPEN . change_table PARENTHESIS_CLOSE

    IDENTIFIER  shift, and go to state 115

    $default  reduce using rule 7 (change_table)

    change_table     go to state 116
    identifier_list  go to state 117


State 64

  135 declarator: pointer direct_declarator .
  139 direct_declarator: direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  140                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list SQUARE_BRACE_CLOSE
  141                  | direct_declarator . SQUARE_BRACE_OPEN assignment_expression SQUARE_BRACE_CLOSE
  142                  | direct_declarator . SQUARE_BRACE_OPEN SQUARE_BRACE_CLOSE
  143                  | direct_declarator . SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  144                  | direct_declarator . SQUARE_BRACE_OPEN STATIC assignment_expression SQUARE_BRACE_CLOSE
  145                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  146                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list MULTIPLY SQUARE_BRACE_CLOSE
  147                  | direct_declarator . SQUARE_BRACE_OPEN MULTIPLY SQUARE_BRACE_CLOSE
  148                  | direct_declarator . PARENTHESIS_OPEN change_table parameter_type_list PARENTHESIS_CLOSE
  149                  | direct_declarator . PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE
  150                  | direct_declarator . PARENTHESIS_OPEN change_table PARENTHESIS_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 62
    PARENTHESIS_OPEN   shift, and go to state 63

    $default  reduce using rule 135 (declarator)


State 65

  129 enumerator: IDENTIFIER .
  130           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 118

    $default  reduce using rule 129 (enumerator)


State 66

  122 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list . CURLY_BRACE_CLOSE
  123               | ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list . COMMA CURLY_BRACE_CLOSE
  128 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACE_CLOSE  shift, and go to state 119
    COMMA              shift, and go to state 120


State 67

  127 enumerator_list: enumerator .

    $default  reduce using rule 127 (enumerator_list)


State 68

  138 direct_declarator: PARENTHESIS_OPEN declarator PARENTHESIS_CLOSE .

    $default  reduce using rule 138 (direct_declarator)


State 69

  154 pointer: MULTIPLY type_qualifier_list_opt pointer .

    $default  reduce using rule 154 (pointer)


State 70

  156 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 156 (type_qualifier_list)


State 71

   98 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 98 (init_declarator_list)


State 72

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 57

    $default  reduce using rule 99 (init_declarator)


State 73

   32 unary_expression: SIZEOF . unary_expression
   33                 | SIZEOF . PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 121
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 122
    unary_operator      go to state 93


State 74

   11 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   22 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   41 cast_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE cast_expression

    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT              shift, and go to state 7
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 124
    type_specifier             go to state 125
    specifier_qualifier_list   go to state 126
    enum_specifier             go to state 26
    type_qualifier             go to state 127
    type_name                  go to state 128


State 75

  167 initializer: CURLY_BRACE_OPEN . initializer_list CURLY_BRACE_CLOSE
  168            | CURLY_BRACE_OPEN . initializer_list COMMA CURLY_BRACE_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 129
    DOT                shift, and go to state 130

    $default  reduce using rule 172 (designation_opt)

    initializer_list  go to state 131
    designation_opt   go to state 132
    designation       go to state 133
    designator_list   go to state 134
    designator        go to state 135


State 76

   29 unary_expression: INCREMENT . unary_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 136
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 137
    unary_operator      go to state 93


State 77

   30 unary_expression: DECREMENT . unary_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 136
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 138
    unary_operator      go to state 93


State 78

   34 unary_operator: BITWISE_AND .

    $default  reduce using rule 34 (unary_operator)


State 79

   35 unary_operator: MULTIPLY .

    $default  reduce using rule 35 (unary_operator)


State 80

   36 unary_operator: ADD .

    $default  reduce using rule 36 (unary_operator)


State 81

   37 unary_operator: SUBTRACT .

    $default  reduce using rule 37 (unary_operator)


State 82

   38 unary_operator: BITWISE_NOR .

    $default  reduce using rule 38 (unary_operator)


State 83

   39 unary_operator: NOT .

    $default  reduce using rule 39 (unary_operator)


State 84

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 85

   12 constant: INTEGER_CONSTANT .

    $default  reduce using rule 12 (constant)


State 86

   13 constant: FLOATING_CONSTANT .

    $default  reduce using rule 13 (constant)


State 87

   14 constant: CHAR_CONSTANT .

    $default  reduce using rule 14 (constant)


State 88

   10 primary_expression: STRING_LITERAL .

    $default  reduce using rule 10 (primary_expression)


State 89

   15 postfix_expression: primary_expression .

    $default  reduce using rule 15 (postfix_expression)


State 90

    9 primary_expression: constant .

    $default  reduce using rule 9 (primary_expression)


State 91

   16 postfix_expression: postfix_expression . SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE
   17                   | postfix_expression . PARENTHESIS_OPEN argument_expression_list_opt PARENTHESIS_CLOSE
   18                   | postfix_expression . DOT IDENTIFIER
   19                   | postfix_expression . ARROW IDENTIFIER
   20                   | postfix_expression . INCREMENT
   21                   | postfix_expression . DECREMENT
   28 unary_expression: postfix_expression .

    SQUARE_BRACE_OPEN  shift, and go to state 139
    PARENTHESIS_OPEN   shift, and go to state 140
    DOT                shift, and go to state 141
    ARROW              shift, and go to state 142
    INCREMENT          shift, and go to state 143
    DECREMENT          shift, and go to state 144

    $default  reduce using rule 28 (unary_expression)


State 92

   40 cast_expression: unary_expression .
   73 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN           shift, and go to state 145
    MULTIPLY_ASSIGN  shift, and go to state 146
    DIVIDE_ASSIGN    shift, and go to state 147
    MODULO_ASSIGN    shift, and go to state 148
    ADD_ASSIGN       shift, and go to state 149
    SUBTRACT_ASSIGN  shift, and go to state 150
    LSHIFT_ASSIGN    shift, and go to state 151
    RSHIFT_ASSIGN    shift, and go to state 152
    AND_ASSIGN       shift, and go to state 153
    XOR_ASSIGN       shift, and go to state 154
    OR_ASSIGN        shift, and go to state 155

    $default  reduce using rule 40 (cast_expression)

    assignment_operator  go to state 156


State 93

   31 unary_expression: unary_operator . cast_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 157
    unary_operator      go to state 93
    cast_expression     go to state 158


State 94

   42 multiplicative_expression: cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 95

   43 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   44                          | multiplicative_expression . DIVIDE cast_expression
   45                          | multiplicative_expression . MODULO cast_expression
   46 additive_expression: multiplicative_expression .

    MULTIPLY  shift, and go to state 159
    DIVIDE    shift, and go to state 160
    MODULO    shift, and go to state 161

    $default  reduce using rule 46 (additive_expression)


State 96

   47 additive_expression: additive_expression . ADD multiplicative_expression
   48                    | additive_expression . SUBTRACT multiplicative_expression
   49 shift_expression: additive_expression .

    ADD       shift, and go to state 162
    SUBTRACT  shift, and go to state 163

    $default  reduce using rule 49 (shift_expression)


State 97

   50 shift_expression: shift_expression . LSHIFT additive_expression
   51                 | shift_expression . RSHIFT additive_expression
   52 relational_expression: shift_expression .

    LSHIFT  shift, and go to state 164
    RSHIFT  shift, and go to state 165

    $default  reduce using rule 52 (relational_expression)


State 98

   53 relational_expression: relational_expression . LESS_THAN shift_expression
   54                      | relational_expression . GREATER_THAN shift_expression
   55                      | relational_expression . LESS_THAN_EQUAL shift_expression
   56                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   57 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 166
    GREATER_THAN        shift, and go to state 167
    LESS_THAN_EQUAL     shift, and go to state 168
    GREATER_THAN_EQUAL  shift, and go to state 169

    $default  reduce using rule 57 (equality_expression)


State 99

   58 equality_expression: equality_expression . EQUAL relational_expression
   59                    | equality_expression . NOT_EQUAL relational_expression
   60 and_expression: equality_expression .

    EQUAL      shift, and go to state 170
    NOT_EQUAL  shift, and go to state 171

    $default  reduce using rule 60 (and_expression)


State 100

   61 and_expression: and_expression . BITWISE_AND equality_expression
   62 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 172

    $default  reduce using rule 62 (exclusive_or_expression)


State 101

   63 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   64 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 173

    $default  reduce using rule 64 (inclusive_or_expression)


State 102

   65 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   66 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 174

    $default  reduce using rule 66 (logical_and_expression)


State 103

   67 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   68 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 175

    $default  reduce using rule 68 (logical_or_expression)


State 104

   69 logical_or_expression: logical_or_expression . LOGICAL_OR M logical_and_expression
   70 conditional_expression: logical_or_expression .
   71                       | logical_or_expression . N QUESTION_MARK M expression N COLON M conditional_expression

    LOGICAL_OR  shift, and go to state 176

    QUESTION_MARK  reduce using rule 2 (N)
    $default       reduce using rule 70 (conditional_expression)

    N  go to state 177


State 105

   72 assignment_expression: conditional_expression .

    $default  reduce using rule 72 (assignment_expression)


State 106

  166 initializer: assignment_expression .

    $default  reduce using rule 166 (initializer)


State 107

  100 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 100 (init_declarator)


State 108

  221 function_definition: declaration_specifiers declarator declaration_list_opt change_table . CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN  shift, and go to state 178


State 109

  225 declaration_list: declaration_list declaration .

    $default  reduce using rule 225 (declaration_list)


State 110

  143 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC . type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  144                  | direct_declarator SQUARE_BRACE_OPEN STATIC . assignment_expression SQUARE_BRACE_CLOSE

    CONST              shift, and go to state 3
    RESTRICT           shift, and go to state 12
    SIZEOF             shift, and go to state 73
    VOLATILE           shift, and go to state 18
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 179
    type_qualifier             go to state 52
    type_qualifier_list        go to state 180


State 111

  142 direct_declarator: direct_declarator SQUARE_BRACE_OPEN SQUARE_BRACE_CLOSE .

    $default  reduce using rule 142 (direct_declarator)


State 112

   35 unary_operator: MULTIPLY .
  147 direct_declarator: direct_declarator SQUARE_BRACE_OPEN MULTIPLY . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 181

    $default  reduce using rule 35 (unary_operator)


State 113

  141 direct_declarator: direct_declarator SQUARE_BRACE_OPEN assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 182


State 114

  139 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list . assignment_expression SQUARE_BRACE_CLOSE
  140                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list . SQUARE_BRACE_CLOSE
  145                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list . STATIC assignment_expression SQUARE_BRACE_CLOSE
  146                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list . MULTIPLY SQUARE_BRACE_CLOSE
  156 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 12
    SIZEOF              shift, and go to state 73
    STATIC              shift, and go to state 183
    VOLATILE            shift, and go to state 18
    SQUARE_BRACE_CLOSE  shift, and go to state 184
    PARENTHESIS_OPEN    shift, and go to state 74
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISE_AND         shift, and go to state 78
    MULTIPLY            shift, and go to state 185
    ADD                 shift, and go to state 80
    SUBTRACT            shift, and go to state 81
    BITWISE_NOR         shift, and go to state 82
    NOT                 shift, and go to state 83
    IDENTIFIER          shift, and go to state 84
    INTEGER_CONSTANT    shift, and go to state 85
    FLOATING_CONSTANT   shift, and go to state 86
    CHAR_CONSTANT       shift, and go to state 87
    STRING_LITERAL      shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 186
    type_qualifier             go to state 70


State 115

  163 identifier_list: IDENTIFIER .

    $default  reduce using rule 163 (identifier_list)


State 116

  148 direct_declarator: direct_declarator PARENTHESIS_OPEN change_table . parameter_type_list PARENTHESIS_CLOSE
  150                  | direct_declarator PARENTHESIS_OPEN change_table . PARENTHESIS_CLOSE

    AUTO               shift, and go to state 1
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    STATIC             shift, and go to state 15
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_CLOSE  shift, and go to state 187

    declaration_specifiers   go to state 188
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 189
    parameter_list           go to state 190
    parameter_declaration    go to state 191


State 117

  149 direct_declarator: direct_declarator PARENTHESIS_OPEN identifier_list . PARENTHESIS_CLOSE
  164 identifier_list: identifier_list . COMMA IDENTIFIER

    PARENTHESIS_CLOSE  shift, and go to state 192
    COMMA              shift, and go to state 193


State 118

  130 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 194
    constant_expression        go to state 195


State 119

  122 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 122 (enum_specifier)


State 120

  123 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list COMMA . CURLY_BRACE_CLOSE
  128 enumerator_list: enumerator_list COMMA . enumerator

    CURLY_BRACE_CLOSE  shift, and go to state 196
    IDENTIFIER         shift, and go to state 65

    enumerator  go to state 197


State 121

   11 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   22 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   33 unary_expression: SIZEOF PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE

    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT              shift, and go to state 7
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 124
    type_specifier             go to state 125
    specifier_qualifier_list   go to state 126
    enum_specifier             go to state 26
    type_qualifier             go to state 127
    type_name                  go to state 198


State 122

   32 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 32 (unary_expression)


State 123

   85 expression: assignment_expression .

    $default  reduce using rule 85 (expression)


State 124

   11 primary_expression: PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE
   86 expression: expression . COMMA assignment_expression

    PARENTHESIS_CLOSE  shift, and go to state 199
    COMMA              shift, and go to state 200


State 125

  118 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 125
    specifier_qualifier_list      go to state 201
    specifier_qualifier_list_opt  go to state 202
    enum_specifier                go to state 26
    type_qualifier                go to state 127


State 126

  165 type_name: specifier_qualifier_list .

    $default  reduce using rule 165 (type_name)


State 127

  119 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT      shift, and go to state 7
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 125
    specifier_qualifier_list      go to state 201
    specifier_qualifier_list_opt  go to state 203
    enum_specifier                go to state 26
    type_qualifier                go to state 127


State 128

   22 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   41 cast_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE cast_expression

    PARENTHESIS_CLOSE  shift, and go to state 204


State 129

  176 designator: SQUARE_BRACE_OPEN . constant_expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 194
    constant_expression        go to state 205


State 130

  177 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 206


State 131

  167 initializer: CURLY_BRACE_OPEN initializer_list . CURLY_BRACE_CLOSE
  168            | CURLY_BRACE_OPEN initializer_list . COMMA CURLY_BRACE_CLOSE
  170 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACE_CLOSE  shift, and go to state 207
    COMMA              shift, and go to state 208


State 132

  169 initializer_list: designation_opt . initializer

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 75
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 106
    initializer                go to state 209


State 133

  171 designation_opt: designation .

    $default  reduce using rule 171 (designation_opt)


State 134

  173 designation: designator_list . ASSIGN
  175 designator_list: designator_list . designator

    SQUARE_BRACE_OPEN  shift, and go to state 129
    DOT                shift, and go to state 130
    ASSIGN             shift, and go to state 210

    designator  go to state 211


State 135

  174 designator_list: designator .

    $default  reduce using rule 174 (designator_list)


State 136

   11 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   22 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT              shift, and go to state 7
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 124
    type_specifier             go to state 125
    specifier_qualifier_list   go to state 126
    enum_specifier             go to state 26
    type_qualifier             go to state 127
    type_name                  go to state 212


State 137

   29 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 138

   30 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 30 (unary_expression)


State 139

   16 postfix_expression: postfix_expression SQUARE_BRACE_OPEN . expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 213


State 140

   17 postfix_expression: postfix_expression PARENTHESIS_OPEN . argument_expression_list_opt PARENTHESIS_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 25 (argument_expression_list_opt)

    primary_expression            go to state 89
    constant                      go to state 90
    postfix_expression            go to state 91
    argument_expression_list_opt  go to state 214
    argument_expression_list      go to state 215
    unary_expression              go to state 92
    unary_operator                go to state 93
    cast_expression               go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    conditional_expression        go to state 105
    assignment_expression         go to state 216


State 141

   18 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 217


State 142

   19 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


State 143

   20 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 20 (postfix_expression)


State 144

   21 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 21 (postfix_expression)


State 145

   74 assignment_operator: ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 146

   75 assignment_operator: MULTIPLY_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 147

   76 assignment_operator: DIVIDE_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 148

   77 assignment_operator: MODULO_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 149

   78 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 78 (assignment_operator)


State 150

   79 assignment_operator: SUBTRACT_ASSIGN .

    $default  reduce using rule 79 (assignment_operator)


State 151

   80 assignment_operator: LSHIFT_ASSIGN .

    $default  reduce using rule 80 (assignment_operator)


State 152

   81 assignment_operator: RSHIFT_ASSIGN .

    $default  reduce using rule 81 (assignment_operator)


State 153

   82 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 82 (assignment_operator)


State 154

   83 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 83 (assignment_operator)


State 155

   84 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 84 (assignment_operator)


State 156

   73 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 219


State 157

   40 cast_expression: unary_expression .

    $default  reduce using rule 40 (cast_expression)


State 158

   31 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 31 (unary_expression)


State 159

   43 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 157
    unary_operator      go to state 93
    cast_expression     go to state 220


State 160

   44 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 157
    unary_operator      go to state 93
    cast_expression     go to state 221


State 161

   45 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 157
    unary_operator      go to state 93
    cast_expression     go to state 222


State 162

   47 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 223


State 163

   48 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 224


State 164

   50 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 225


State 165

   51 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 226


State 166

   53 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 227


State 167

   54 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 228


State 168

   55 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 229


State 169

   56 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 230


State 170

   58 equality_expression: equality_expression EQUAL . relational_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 231


State 171

   59 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 232


State 172

   61 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 233


State 173

   63 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 234


State 174

   65 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 235


State 175

   67 logical_and_expression: logical_and_expression LOGICAL_AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 236


State 176

   69 logical_or_expression: logical_or_expression LOGICAL_OR . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 237


State 177

   71 conditional_expression: logical_or_expression N . QUESTION_MARK M expression N COLON M conditional_expression

    QUESTION_MARK  shift, and go to state 238


State 178

  221 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACE_OPEN . block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 258
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 179

  144 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 265


State 180

  143 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list . assignment_expression SQUARE_BRACE_CLOSE
  156 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST              shift, and go to state 3
    RESTRICT           shift, and go to state 12
    SIZEOF             shift, and go to state 73
    VOLATILE           shift, and go to state 18
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 266
    type_qualifier             go to state 70


State 181

  147 direct_declarator: direct_declarator SQUARE_BRACE_OPEN MULTIPLY SQUARE_BRACE_CLOSE .

    $default  reduce using rule 147 (direct_declarator)


State 182

  141 direct_declarator: direct_declarator SQUARE_BRACE_OPEN assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 141 (direct_declarator)


State 183

  145 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC . assignment_expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 267


State 184

  140 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list SQUARE_BRACE_CLOSE .

    $default  reduce using rule 140 (direct_declarator)


State 185

   35 unary_operator: MULTIPLY .
  146 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list MULTIPLY . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 268

    $default  reduce using rule 35 (unary_operator)


State 186

  139 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 269


State 187

  150 direct_declarator: direct_declarator PARENTHESIS_OPEN change_table PARENTHESIS_CLOSE .

    $default  reduce using rule 150 (direct_declarator)


State 188

  161 parameter_declaration: declaration_specifiers . declarator
  162                      | declaration_specifiers .

    PARENTHESIS_OPEN  shift, and go to state 34
    MULTIPLY          shift, and go to state 35
    IDENTIFIER        shift, and go to state 36

    $default  reduce using rule 162 (parameter_declaration)

    declarator         go to state 270
    direct_declarator  go to state 41
    pointer            go to state 42


State 189

  148 direct_declarator: direct_declarator PARENTHESIS_OPEN change_table parameter_type_list . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 271


State 190

  157 parameter_type_list: parameter_list .
  158                    | parameter_list . COMMA ELLIPSIS
  160 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 272

    $default  reduce using rule 157 (parameter_type_list)


State 191

  159 parameter_list: parameter_declaration .

    $default  reduce using rule 159 (parameter_list)


State 192

  149 direct_declarator: direct_declarator PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE .

    $default  reduce using rule 149 (direct_declarator)


State 193

  164 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 273


State 194

   87 constant_expression: conditional_expression .

    $default  reduce using rule 87 (constant_expression)


State 195

  130 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 130 (enumerator)


State 196

  123 enum_specifier: ENUM identifier_opt CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 123 (enum_specifier)


State 197

  128 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 128 (enumerator_list)


State 198

   22 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   33 unary_expression: SIZEOF PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 274


State 199

   11 primary_expression: PARENTHESIS_OPEN expression PARENTHESIS_CLOSE .

    $default  reduce using rule 11 (primary_expression)


State 200

   86 expression: expression COMMA . assignment_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 275


State 201

  120 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 120 (specifier_qualifier_list_opt)


State 202

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 203

  119 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 119 (specifier_qualifier_list)


State 204

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   41 cast_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . cast_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 276
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression  go to state 89
    constant            go to state 90
    postfix_expression  go to state 91
    unary_expression    go to state 157
    unary_operator      go to state 93
    cast_expression     go to state 277


State 205

  176 designator: SQUARE_BRACE_OPEN constant_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 278


State 206

  177 designator: DOT IDENTIFIER .

    $default  reduce using rule 177 (designator)


State 207

  167 initializer: CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 167 (initializer)


State 208

  168 initializer: CURLY_BRACE_OPEN initializer_list COMMA . CURLY_BRACE_CLOSE
  170 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACE_OPEN  shift, and go to state 129
    CURLY_BRACE_CLOSE  shift, and go to state 279
    DOT                shift, and go to state 130

    $default  reduce using rule 172 (designation_opt)

    designation_opt  go to state 280
    designation      go to state 133
    designator_list  go to state 134
    designator       go to state 135


State 209

  169 initializer_list: designation_opt initializer .

    $default  reduce using rule 169 (initializer_list)


State 210

  173 designation: designator_list ASSIGN .

    $default  reduce using rule 173 (designation)


State 211

  175 designator_list: designator_list designator .

    $default  reduce using rule 175 (designator_list)


State 212

   22 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 281


State 213

   16 postfix_expression: postfix_expression SQUARE_BRACE_OPEN expression . SQUARE_BRACE_CLOSE
   86 expression: expression . COMMA assignment_expression

    SQUARE_BRACE_CLOSE  shift, and go to state 282
    COMMA               shift, and go to state 200


State 214

   17 postfix_expression: postfix_expression PARENTHESIS_OPEN argument_expression_list_opt . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 283


State 215

   24 argument_expression_list_opt: argument_expression_list .
   27 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 284

    $default  reduce using rule 24 (argument_expression_list_opt)


State 216

   26 argument_expression_list: assignment_expression .

    $default  reduce using rule 26 (argument_expression_list)


State 217

   18 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 218

   19 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 19 (postfix_expression)


State 219

   73 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 73 (assignment_expression)


State 220

   43 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 221

   44 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 222

   45 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 45 (multiplicative_expression)


State 223

   43 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   44                          | multiplicative_expression . DIVIDE cast_expression
   45                          | multiplicative_expression . MODULO cast_expression
   47 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY  shift, and go to state 159
    DIVIDE    shift, and go to state 160
    MODULO    shift, and go to state 161

    $default  reduce using rule 47 (additive_expression)


State 224

   43 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   44                          | multiplicative_expression . DIVIDE cast_expression
   45                          | multiplicative_expression . MODULO cast_expression
   48 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY  shift, and go to state 159
    DIVIDE    shift, and go to state 160
    MODULO    shift, and go to state 161

    $default  reduce using rule 48 (additive_expression)


State 225

   47 additive_expression: additive_expression . ADD multiplicative_expression
   48                    | additive_expression . SUBTRACT multiplicative_expression
   50 shift_expression: shift_expression LSHIFT additive_expression .

    ADD       shift, and go to state 162
    SUBTRACT  shift, and go to state 163

    $default  reduce using rule 50 (shift_expression)


State 226

   47 additive_expression: additive_expression . ADD multiplicative_expression
   48                    | additive_expression . SUBTRACT multiplicative_expression
   51 shift_expression: shift_expression RSHIFT additive_expression .

    ADD       shift, and go to state 162
    SUBTRACT  shift, and go to state 163

    $default  reduce using rule 51 (shift_expression)


State 227

   50 shift_expression: shift_expression . LSHIFT additive_expression
   51                 | shift_expression . RSHIFT additive_expression
   53 relational_expression: relational_expression LESS_THAN shift_expression .

    LSHIFT  shift, and go to state 164
    RSHIFT  shift, and go to state 165

    $default  reduce using rule 53 (relational_expression)


State 228

   50 shift_expression: shift_expression . LSHIFT additive_expression
   51                 | shift_expression . RSHIFT additive_expression
   54 relational_expression: relational_expression GREATER_THAN shift_expression .

    LSHIFT  shift, and go to state 164
    RSHIFT  shift, and go to state 165

    $default  reduce using rule 54 (relational_expression)


State 229

   50 shift_expression: shift_expression . LSHIFT additive_expression
   51                 | shift_expression . RSHIFT additive_expression
   55 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .

    LSHIFT  shift, and go to state 164
    RSHIFT  shift, and go to state 165

    $default  reduce using rule 55 (relational_expression)


State 230

   50 shift_expression: shift_expression . LSHIFT additive_expression
   51                 | shift_expression . RSHIFT additive_expression
   56 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .

    LSHIFT  shift, and go to state 164
    RSHIFT  shift, and go to state 165

    $default  reduce using rule 56 (relational_expression)


State 231

   53 relational_expression: relational_expression . LESS_THAN shift_expression
   54                      | relational_expression . GREATER_THAN shift_expression
   55                      | relational_expression . LESS_THAN_EQUAL shift_expression
   56                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   58 equality_expression: equality_expression EQUAL relational_expression .

    LESS_THAN           shift, and go to state 166
    GREATER_THAN        shift, and go to state 167
    LESS_THAN_EQUAL     shift, and go to state 168
    GREATER_THAN_EQUAL  shift, and go to state 169

    $default  reduce using rule 58 (equality_expression)


State 232

   53 relational_expression: relational_expression . LESS_THAN shift_expression
   54                      | relational_expression . GREATER_THAN shift_expression
   55                      | relational_expression . LESS_THAN_EQUAL shift_expression
   56                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   59 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 166
    GREATER_THAN        shift, and go to state 167
    LESS_THAN_EQUAL     shift, and go to state 168
    GREATER_THAN_EQUAL  shift, and go to state 169

    $default  reduce using rule 59 (equality_expression)


State 233

   58 equality_expression: equality_expression . EQUAL relational_expression
   59                    | equality_expression . NOT_EQUAL relational_expression
   61 and_expression: and_expression BITWISE_AND equality_expression .

    EQUAL      shift, and go to state 170
    NOT_EQUAL  shift, and go to state 171

    $default  reduce using rule 61 (and_expression)


State 234

   61 and_expression: and_expression . BITWISE_AND equality_expression
   63 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 172

    $default  reduce using rule 63 (exclusive_or_expression)


State 235

   63 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   65 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 173

    $default  reduce using rule 65 (inclusive_or_expression)


State 236

   67 logical_and_expression: logical_and_expression LOGICAL_AND M . inclusive_or_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 285


State 237

   69 logical_or_expression: logical_or_expression LOGICAL_OR M . logical_and_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 286


State 238

   71 conditional_expression: logical_or_expression N QUESTION_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 287


State 239

  214 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 288


State 240

  190 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 194
    constant_expression        go to state 289


State 241

  213 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 290


State 242

  191 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 291


State 243

  206 iteration_statement: DO . D M loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON
  207                    | DO . D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 6 (D)

    D  go to state 292


State 244

  208 iteration_statement: FOR . F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR . F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR . F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR . F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 4 (F)

    F  go to state 293


State 245

  212 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 294


State 246

  201 selection_statement: IF . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N
  202                    | IF . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement

    PARENTHESIS_OPEN  shift, and go to state 295


State 247

  215 jump_statement: RETURN . expression SEMICOLON
  216               | RETURN . SEMICOLON

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 296
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 297


State 248

  203 selection_statement: SWITCH . PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement

    PARENTHESIS_OPEN  shift, and go to state 298


State 249

  204 iteration_statement: WHILE . W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE . W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 5 (W)

    W  go to state 299


State 250

  192 compound_statement: CURLY_BRACE_OPEN . X change_table block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 3 (X)

    X  go to state 300


State 251

  200 expression_statement: SEMICOLON .

    $default  reduce using rule 200 (expression_statement)


State 252

    8 primary_expression: IDENTIFIER .
  189 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 301

    $default  reduce using rule 8 (primary_expression)


State 253

   86 expression: expression . COMMA assignment_expression
  199 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 302
    COMMA      shift, and go to state 200


State 254

  197 block_item: declaration .

    $default  reduce using rule 197 (block_item)


State 255

  198 block_item: statement .

    $default  reduce using rule 198 (block_item)


State 256

  178 statement: labeled_statement .

    $default  reduce using rule 178 (statement)


State 257

  179 statement: compound_statement .

    $default  reduce using rule 179 (statement)


State 258

  221 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACE_OPEN block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 303


State 259

  193 block_item_list_opt: block_item_list .
  196 block_item_list: block_item_list . M block_item

    CURLY_BRACE_CLOSE  reduce using rule 193 (block_item_list_opt)
    $default           reduce using rule 1 (M)

    M  go to state 304


State 260

  195 block_item_list: block_item .

    $default  reduce using rule 195 (block_item_list)


State 261

  180 statement: expression_statement .

    $default  reduce using rule 180 (statement)


State 262

  181 statement: selection_statement .

    $default  reduce using rule 181 (statement)


State 263

  182 statement: iteration_statement .

    $default  reduce using rule 182 (statement)


State 264

  183 statement: jump_statement .

    $default  reduce using rule 183 (statement)


State 265

  144 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 144 (direct_declarator)


State 266

  143 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 305


State 267

  145 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 306


State 268

  146 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list MULTIPLY SQUARE_BRACE_CLOSE .

    $default  reduce using rule 146 (direct_declarator)


State 269

  139 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 139 (direct_declarator)


State 270

  161 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 161 (parameter_declaration)


State 271

  148 direct_declarator: direct_declarator PARENTHESIS_OPEN change_table parameter_type_list PARENTHESIS_CLOSE .

    $default  reduce using rule 148 (direct_declarator)


State 272

  158 parameter_type_list: parameter_list COMMA . ELLIPSIS
  160 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    INT        shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 307

    declaration_specifiers   go to state 188
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 308


State 273

  164 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 164 (identifier_list)


State 274

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   33 unary_expression: SIZEOF PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE .

    CURLY_BRACE_OPEN  shift, and go to state 276

    $default  reduce using rule 33 (unary_expression)


State 275

   86 expression: expression COMMA assignment_expression .

    $default  reduce using rule 86 (expression)


State 276

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN . initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN . initializer_list COMMA CURLY_BRACE_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 129
    DOT                shift, and go to state 130

    $default  reduce using rule 172 (designation_opt)

    initializer_list  go to state 309
    designation_opt   go to state 132
    designation       go to state 133
    designator_list   go to state 134
    designator        go to state 135


State 277

   41 cast_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE cast_expression .

    $default  reduce using rule 41 (cast_expression)


State 278

  176 designator: SQUARE_BRACE_OPEN constant_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 176 (designator)


State 279

  168 initializer: CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 168 (initializer)


State 280

  170 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 75
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 106
    initializer                go to state 310


State 281

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN  shift, and go to state 276


State 282

   16 postfix_expression: postfix_expression SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 16 (postfix_expression)


State 283

   17 postfix_expression: postfix_expression PARENTHESIS_OPEN argument_expression_list_opt PARENTHESIS_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


State 284

   27 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 311


State 285

   65 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   67 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 174

    $default  reduce using rule 67 (logical_and_expression)


State 286

   67 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   69 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression .

    LOGICAL_AND  shift, and go to state 175

    $default  reduce using rule 69 (logical_or_expression)


State 287

   71 conditional_expression: logical_or_expression N QUESTION_MARK M . expression N COLON M conditional_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 312


State 288

  214 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 214 (jump_statement)


State 289

  190 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 313


State 290

  213 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 213 (jump_statement)


State 291

  191 labeled_statement: DEFAULT COLON . statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 314
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 292

  206 iteration_statement: DO D . M loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON
  207                    | DO D . CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    CURLY_BRACE_OPEN  shift, and go to state 315

    $default  reduce using rule 1 (M)

    M  go to state 316


State 293

  208 iteration_statement: FOR F . PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR F . PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F . PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR F . PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_OPEN  shift, and go to state 317


State 294

  212 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 318


State 295

  201 selection_statement: IF PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE M statement N
  202                    | IF PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE M statement N ELSE M statement

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 319


State 296

  216 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 216 (jump_statement)


State 297

   86 expression: expression . COMMA assignment_expression
  215 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 320
    COMMA      shift, and go to state 200


State 298

  203 selection_statement: SWITCH PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE statement

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 321


State 299

  204 iteration_statement: WHILE W . PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W . PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_OPEN  shift, and go to state 322


State 300

  192 compound_statement: CURLY_BRACE_OPEN X . change_table block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 7 (change_table)

    change_table  go to state 323


State 301

  189 labeled_statement: IDENTIFIER COLON . statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 324
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 302

  199 expression_statement: expression SEMICOLON .

    $default  reduce using rule 199 (expression_statement)


State 303

  221 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 221 (function_definition)


State 304

  196 block_item_list: block_item_list M . block_item

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item                 go to state 325
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 305

  143 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 143 (direct_declarator)


State 306

  145 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 145 (direct_declarator)


State 307

  158 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 158 (parameter_type_list)


State 308

  160 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 160 (parameter_list)


State 309

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list . CURLY_BRACE_CLOSE
   23                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list . COMMA CURLY_BRACE_CLOSE
  170 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACE_CLOSE  shift, and go to state 326
    COMMA              shift, and go to state 327


State 310

  170 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 170 (initializer_list)


State 311

   27 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 27 (argument_expression_list)


State 312

   71 conditional_expression: logical_or_expression N QUESTION_MARK M expression . N COLON M conditional_expression
   86 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 200

    $default  reduce using rule 2 (N)

    N  go to state 328


State 313

  190 labeled_statement: CASE constant_expression COLON . statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 329
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 314

  191 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 191 (labeled_statement)


State 315

  207 iteration_statement: DO D CURLY_BRACE_OPEN . M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 330


State 316

  206 iteration_statement: DO D M . loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    loop_statement             go to state 331
    labeled_statement          go to state 332
    expression_statement       go to state 333
    selection_statement        go to state 334
    iteration_statement        go to state 335
    jump_statement             go to state 336


State 317

  208 iteration_statement: FOR F PARENTHESIS_OPEN . X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR F PARENTHESIS_OPEN . X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN . X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR F PARENTHESIS_OPEN . X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 3 (X)

    X  go to state 337


State 318

  212 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 212 (jump_statement)


State 319

   86 expression: expression . COMMA assignment_expression
  201 selection_statement: IF PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE M statement N
  202                    | IF PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 200

    $default  reduce using rule 2 (N)

    N  go to state 338


State 320

  215 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 215 (jump_statement)


State 321

   86 expression: expression . COMMA assignment_expression
  203 selection_statement: SWITCH PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE statement

    PARENTHESIS_CLOSE  shift, and go to state 339
    COMMA              shift, and go to state 200


State 322

  204 iteration_statement: WHILE W PARENTHESIS_OPEN . X change_table M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN . X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 3 (X)

    X  go to state 340


State 323

  192 compound_statement: CURLY_BRACE_OPEN X change_table . block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 341
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 324

  189 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 189 (labeled_statement)


State 325

  196 block_item_list: block_item_list M block_item .

    $default  reduce using rule 196 (block_item_list)


State 326

   22 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 22 (postfix_expression)


State 327

   23 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA . CURLY_BRACE_CLOSE
  170 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACE_OPEN  shift, and go to state 129
    CURLY_BRACE_CLOSE  shift, and go to state 342
    DOT                shift, and go to state 130

    $default  reduce using rule 172 (designation_opt)

    designation_opt  go to state 280
    designation      go to state 133
    designator_list  go to state 134
    designator       go to state 135


State 328

   71 conditional_expression: logical_or_expression N QUESTION_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 343


State 329

  190 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 190 (labeled_statement)


State 330

  207 iteration_statement: DO D CURLY_BRACE_OPEN M . block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 344
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 331

  206 iteration_statement: DO D M loop_statement . M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 345


State 332

  184 loop_statement: labeled_statement .

    $default  reduce using rule 184 (loop_statement)


State 333

  185 loop_statement: expression_statement .

    $default  reduce using rule 185 (loop_statement)


State 334

  186 loop_statement: selection_statement .

    $default  reduce using rule 186 (loop_statement)


State 335

  187 loop_statement: iteration_statement .

    $default  reduce using rule 187 (loop_statement)


State 336

  188 loop_statement: jump_statement .

    $default  reduce using rule 188 (loop_statement)


State 337

  208 iteration_statement: FOR F PARENTHESIS_OPEN X . change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR F PARENTHESIS_OPEN X . change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X . change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR F PARENTHESIS_OPEN X . change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 7 (change_table)

    change_table  go to state 346


State 338

  201 selection_statement: IF PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE M statement N
  202                    | IF PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE M statement N ELSE M statement

    PARENTHESIS_CLOSE  shift, and go to state 347


State 339

  203 selection_statement: SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE . statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 348
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 340

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X . change_table M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X . change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 7 (change_table)

    change_table  go to state 349


State 341

  192 compound_statement: CURLY_BRACE_OPEN X change_table block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 350


State 342

   23 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 23 (postfix_expression)


State 343

   71 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 351


State 344

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt . CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    CURLY_BRACE_CLOSE  shift, and go to state 352


State 345

  206 iteration_statement: DO D M loop_statement M . WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    WHILE  shift, and go to state 353


State 346

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table . declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  209                    | FOR F PARENTHESIS_OPEN X change_table . expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table . declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE
  211                    | FOR F PARENTHESIS_OPEN X change_table . expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 354
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_statement       go to state 355


State 347

  201 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . M statement N
  202                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 356


State 348

  203 selection_statement: SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement .

    $default  reduce using rule 203 (selection_statement)


State 349

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table . M expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X change_table . M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 357


State 350

  192 compound_statement: CURLY_BRACE_OPEN X change_table block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 192 (compound_statement)


State 351

   71 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON M . conditional_expression

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 157
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 358


State 352

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE . M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 359


State 353

  206 iteration_statement: DO D M loop_statement M WHILE . PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_OPEN  shift, and go to state 360


State 354

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration . M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration . M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 361


State 355

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement . M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement . M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 362


State 356

  201 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M . statement N
  202                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M . statement N ELSE M statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 363
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 357

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M . expression PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X change_table M . expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 364


State 358

   71 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 71 (conditional_expression)


State 359

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M . WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    WHILE  shift, and go to state 365


State 360

  206 iteration_statement: DO D M loop_statement M WHILE PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE SEMICOLON

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 366


State 361

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M . expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M . expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    expression_statement       go to state 367


State 362

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M . expression_statement M expression N PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M . expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    expression_statement       go to state 368


State 363

  201 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement . N
  202                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement . N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 369


State 364

   86 expression: expression . COMMA assignment_expression
  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression . PARENTHESIS_CLOSE M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X change_table M expression . PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 370
    COMMA              shift, and go to state 200


State 365

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE . PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_OPEN  shift, and go to state 371


State 366

   86 expression: expression . COMMA assignment_expression
  206 iteration_statement: DO D M loop_statement M WHILE PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_CLOSE  shift, and go to state 372
    COMMA              shift, and go to state 200


State 367

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement . M expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement . M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 373


State 368

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement . M expression N PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement . M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 374


State 369

  201 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N .
  202                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N . ELSE M statement

    ELSE  shift, and go to state 375

    $default  reduce using rule 201 (selection_statement)


State 370

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE . M loop_statement
  205                    | WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE . CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN  shift, and go to state 376

    $default  reduce using rule 1 (M)

    M  go to state 377


State 371

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE SEMICOLON

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 378


State 372

  206 iteration_statement: DO D M loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 379


State 373

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M . expression N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M . expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 380


State 374

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M . expression N PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M . expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    SIZEOF             shift, and go to state 73
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    IDENTIFIER         shift, and go to state 84
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 381


State 375

  202 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 382


State 376

  205 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN . M block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 383


State 377

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE M . loop_statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    loop_statement             go to state 384
    labeled_statement          go to state 332
    expression_statement       go to state 333
    selection_statement        go to state 334
    iteration_statement        go to state 335
    jump_statement             go to state 336


State 378

   86 expression: expression . COMMA assignment_expression
  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_CLOSE  shift, and go to state 385
    COMMA              shift, and go to state 200


State 379

  206 iteration_statement: DO D M loop_statement M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON .

    $default  reduce using rule 206 (iteration_statement)


State 380

   86 expression: expression . COMMA assignment_expression
  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression . N PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression . N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    COMMA  shift, and go to state 200

    $default  reduce using rule 2 (N)

    N  go to state 386


State 381

   86 expression: expression . COMMA assignment_expression
  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression . N PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression . N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    COMMA  shift, and go to state 200

    $default  reduce using rule 2 (N)

    N  go to state 387


State 382

  202 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M . statement

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    statement                  go to state 388
    labeled_statement          go to state 256
    compound_statement         go to state 257
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 383

  205 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M . block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 389
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 384

  204 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE M loop_statement .

    $default  reduce using rule 204 (iteration_statement)


State 385

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 390


State 386

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N . PARENTHESIS_CLOSE M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N . PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 391


State 387

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N . PARENTHESIS_CLOSE M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N . PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 392


State 388

  202 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement .

    $default  reduce using rule 202 (selection_statement)


State 389

  205 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 393


State 390

  207 iteration_statement: DO D CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE M WHILE PARENTHESIS_OPEN expression PARENTHESIS_CLOSE SEMICOLON .

    $default  reduce using rule 207 (iteration_statement)


State 391

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE . M loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE . M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 394


State 392

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE . M loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE . M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    $default  reduce using rule 1 (M)

    M  go to state 395


State 393

  205 iteration_statement: WHILE W PARENTHESIS_OPEN X change_table M expression PARENTHESIS_CLOSE CURLY_BRACE_OPEN M block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 205 (iteration_statement)


State 394

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M . loop_statement
  210                    | FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M . CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 396
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    loop_statement             go to state 397
    labeled_statement          go to state 332
    expression_statement       go to state 333
    selection_statement        go to state 334
    iteration_statement        go to state 335
    jump_statement             go to state 336


State 395

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M . loop_statement
  211                    | FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M . CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE

    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    RETURN             shift, and go to state 247
    SIZEOF             shift, and go to state 73
    SWITCH             shift, and go to state 248
    WHILE              shift, and go to state 249
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 398
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    loop_statement             go to state 399
    labeled_statement          go to state 332
    expression_statement       go to state 333
    selection_statement        go to state 334
    iteration_statement        go to state 335
    jump_statement             go to state 336


State 396

  210 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN . block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 400
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 397

  208 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement .

    $default  reduce using rule 208 (iteration_statement)


State 398

  211 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN . block_item_list_opt CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 239
    CASE               shift, and go to state 240
    CHAR               shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 241
    DEFAULT            shift, and go to state 242
    DO                 shift, and go to state 243
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT              shift, and go to state 7
    FOR                shift, and go to state 244
    GOTO               shift, and go to state 245
    IF                 shift, and go to state 246
    INLINE             shift, and go to state 8
    INT                shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN             shift, and go to state 247
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 73
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 248
    UNSIGNED           shift, and go to state 16
    VOID               shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 249
    BOOL               shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 74
    CURLY_BRACE_OPEN   shift, and go to state 250
    INCREMENT          shift, and go to state 76
    DECREMENT          shift, and go to state 77
    BITWISE_AND        shift, and go to state 78
    MULTIPLY           shift, and go to state 79
    ADD                shift, and go to state 80
    SUBTRACT           shift, and go to state 81
    BITWISE_NOR        shift, and go to state 82
    NOT                shift, and go to state 83
    SEMICOLON          shift, and go to state 251
    IDENTIFIER         shift, and go to state 252
    INTEGER_CONSTANT   shift, and go to state 85
    FLOATING_CONSTANT  shift, and go to state 86
    CHAR_CONSTANT      shift, and go to state 87
    STRING_LITERAL     shift, and go to state 88

    $default  reduce using rule 194 (block_item_list_opt)

    primary_expression         go to state 89
    constant                   go to state 90
    postfix_expression         go to state 91
    unary_expression           go to state 92
    unary_operator             go to state 93
    cast_expression            go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    conditional_expression     go to state 105
    assignment_expression      go to state 123
    expression                 go to state 253
    declaration                go to state 254
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 255
    labeled_statement          go to state 256
    compound_statement         go to state 257
    block_item_list_opt        go to state 401
    block_item_list            go to state 259
    block_item                 go to state 260
    expression_statement       go to state 261
    selection_statement        go to state 262
    iteration_statement        go to state 263
    jump_statement             go to state 264


State 399

  209 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M loop_statement .

    $default  reduce using rule 209 (iteration_statement)


State 400

  210 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 402


State 401

  211 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt . CURLY_BRACE_CLOSE

    CURLY_BRACE_CLOSE  shift, and go to state 403


State 402

  210 iteration_statement: FOR F PARENTHESIS_OPEN X change_table declaration M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 210 (iteration_statement)


State 403

  211 iteration_statement: FOR F PARENTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARENTHESIS_CLOSE M CURLY_BRACE_OPEN block_item_list_opt CURLY_BRACE_CLOSE .

    $default  reduce using rule 211 (iteration_statement)
